name: "Manifest Source Storage"

on:
  push:
    branches:
    - master

jobs:
  enumerate:
    name: "Enumerate Manifests"
    runs-on: ubuntu-latest
    outputs:
      manifests: ${{ steps.enumerate.outputs.manifests }}
      n_manifests: ${{ steps.enumerate.outputs.n_manifests }}
    steps:
    - name: "Clone Repository"
      uses: actions/checkout@v2
    - name: "Enumerate Manifests"
      id: enumerate
      run: |
        MANIFESTS="$(make --silent msrc-list-diff 'MSRC_TOKEN=${{ github.token }}')"
        N_MANIFESTS="$(echo "${MANIFESTS}" | jq -c '. | length')"
        echo "::set-output name=manifests::${MANIFESTS}"
        echo "::set-output name=n_manifests::${N_MANIFESTS}"
    - name: "Print Manifest List"
      run: |
        echo '${{ steps.enumerate.outputs.manifests }}' | jq .
    - name: "Print Variables"
      run: |
        echo 'n_manifests: ${{ steps.enumerate.outputs.n_manifests }}'

  msrc:
    name: "Prefetch Sources"
    if: github.repository == 'osbuild/manifestdb' && needs.enumerate.outputs.n_manifests != 0
    runs-on: ubuntu-latest
    needs: enumerate
    strategy:
      fail-fast: false
      matrix:
        manifest: ${{ fromJson(needs.enumerate.outputs.manifests) }}
    steps:
    - name: "Clone Repository"
      uses: actions/checkout@v2
    - name: "Prefetch and Store Sources"
      uses: osbuild/containers/src/actions/ghci-osbuild@v1
      with:
        image: docker.pkg.github.com/osbuild/containers/ghci-manifestdb:v1
        run: |
          docker login docker.pkg.github.com -u '${{ github.actor }}' -p '${{ github.token }}'
          make msrc-push 'MSRC_MANIFEST=by-checksum/${{ matrix.manifest }}'
